{"version":3,"sources":["images/chicago-Image.png","images/spillIt-Image.png","images/weatherly-Image.png","images/blockbuster-Image.png","images/northCentral-Image.jpg","images/championshipTrophy-Image.jpg","images/mustang-Image.jpg","components/Toolbar/Toolbar.js","components/Footer/Footer.js","components/Project/Project.js","components/Home/Home.js","components/AboutItem/AboutItem.js","components/About/About.js","components/Contact/Contact.js","App.js","index.js"],"names":["module","exports","toolbar","className","to","Footer","Project","props","projectName","src","projectImage","alt","href","projectURL","projectDescription","projectDifficulties","projectSolutions","id","projectTechnologies","map","technology","i","key","Home","chicagoImage","spillItImage","weatherlyImage","blockbusterImage","AboutItem","header","image","text","About","education_image","athletic_image","hobby_image","Contact","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.011a62a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chicago-Image.9a9a9d38.png\";","module.exports = __webpack_public_path__ + \"static/media/spillIt-Image.52e63482.png\";","module.exports = __webpack_public_path__ + \"static/media/weatherly-Image.b958ebc6.png\";","module.exports = __webpack_public_path__ + \"static/media/blockbuster-Image.2773e4b0.png\";","module.exports = __webpack_public_path__ + \"static/media/northCentral-Image.f6424f2d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/championshipTrophy-Image.a02d1483.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mustang-Image.f2270520.jpg\";","\r\nimport React from 'react';\r\nimport './Toolbar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst toolbar = () => (\r\n    <header className=\"toolbar\">\r\n        <nav className=\"toolbar_navigation\">\r\n            <div className=\"toolbar_logo\">Gavin Cernek</div>\r\n            <div className=\"spacer\" />\r\n            <div className=\"toolbar_navigation_items\">\r\n                <ul>\r\n                    <Link to=\"/\">\r\n                        <li>HOME</li>\r\n                    </Link>\r\n                    \r\n                    <Link to=\"/about\">\r\n                        <li>ABOUT</li>\r\n                    </Link>\r\n                    \r\n                    <Link to=\"/contact\">\r\n                        <li>CONTACT</li>\r\n                    </Link>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","\r\nimport React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>&copy; Copyright 2021, Gavin Cernek</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","\r\nimport React from \"react\";\r\n\r\nimport \"./Project.css\";\r\n\r\nconst Project = props => {\r\n\r\n    return (\r\n        <div className=\"project\">\r\n            <h1>{props.projectName}</h1>\r\n\r\n            <div className=\"project-image\">\r\n                <img src={props.projectImage} alt=\"Project\"/>\r\n                <a href={props.projectURL}>View Project in GitHub</a>\r\n            </div>\r\n\r\n            <div className=\"project-info\">\r\n                <div className=\"project-description\">\r\n                    <h3>DESCRIPTION</h3>\r\n                    <p>{props.projectDescription}</p>\r\n                </div>\r\n\r\n                <div className=\"project-difficulties\">\r\n                    <h3>DIFFICULTIES FACED</h3>\r\n                    <p>{props.projectDifficulties}</p>\r\n                </div>\r\n\r\n                <div className=\"project-solutions\">\r\n                    <h3>SOLUTIONS TO THE DIFFICULTIES</h3>\r\n                    <p>{props.projectSolutions}</p>\r\n                </div>\r\n\r\n                <div className=\"project-technologies\">\r\n                    <h3>TECHNOLOGIES USED</h3>\r\n                    <ul id=\"technologies-list\">\r\n                        {props.projectTechnologies.map((technology, i) => (\r\n                            <li key={i}>{technology}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Project;","\r\nimport React from 'react';\r\nimport './Home.css';\r\nimport chicagoImage from '../../images/chicago-Image.png';\r\nimport spillItImage from \"../../images/spillIt-Image.png\";\r\nimport weatherlyImage from \"../../images/weatherly-Image.png\";\r\nimport blockbusterImage from '../../images/blockbuster-Image.png';\r\nimport Project from \"../Project/Project\";\r\n\r\nconst Home = () => {\r\n\r\n  const spillItDescription = (\r\n    `Spill It is a full stack social media app that utilizes the MERN stack to create a RESTful API where users can \r\n    sign up to “spill” whatever is on their mind. The app allows users to perform a multitude of actions such as creating \r\n    accounts and logging in, making new posts, a commenting system, and more. React is used to serve the client-side of the \r\n    app where users, posts, and comments are stored in state variables in order to provide a fast and responsive view. \r\n    There are several different components that make up the frontend which provide the markup and logic for many of the actions \r\n    a user can make while using the app. The Node.js server uses multiple different npm packages such as Express and Mongoose to \r\n    create the routes and store/return the data required for the app to function. User authentication and authorization were fully \r\n    implemented into the app by using a combination of JSON Web Tokens and HTTP cookies to protect user data. \r\n    Bcrypt was also implemented to hash passwords to further protect sensitive user data.`\r\n  );\r\n\r\n  const spillItDifficulties = (\r\n    `A project of this size certainly came with an equally large amount of problems. Making a commenting system was an \r\n    integral part of the app since I wanted it to be interactive and fun to discuss posts or add opinions of all kinds. \r\n    However, this meant that adding comments to each post was going to require a nested array that would be stored along with \r\n    the post. Accessing this array and pushing new comments into it proved to be difficult and, even worse, extracting the \r\n    comment’s unique id to track actions such as liking and unliking. Another difficulty was implementing the JSON Web Tokens \r\n    and HTTP cookies to protect user data and persist login sessions. Keeping track of them was a lot more complex than I \r\n    originally thought and knowing where to place them in my server responses. One last problem that was hard to navigate was \r\n    making sure only the correct user could access powerful requests such as deleting or editing a post.`\r\n  );\r\n\r\n  const spillItSolutions = (\r\n    `Solving these difficulties was simultaneously the most stressful and most rewarding part of the development process. \r\n    Seeing the app finally do what I wanted was something that kept me going with enthusiasm and made me want to sit and code \r\n    all day long. I solved the commenting issue by utilizing MongoDB’s operators such as $push to push the comment into the array \r\n    and then used an identifier to increment the comment’s likes. I also added an array to keep track of the users who liked that \r\n    specific comment in order to determine if they had already liked the comment before or not. For the user authentication problem, \r\n    I used JSON Web Tokens to create an access token once the user successfully logged in. A refresh token is also created and \r\n    stored in an HTTP cookie that is sent back to the client along with the access token. These are sent to the server whenever a \r\n    user accesses a protected route to verify their identity. If the user refreshes the page, the refresh token is read to issue \r\n    a new access token to the user to persist their session. Lastly, the access token was also used to help solve the final \r\n    problem by having the server return responses that verified if the user was the author of a post in order to determine if \r\n    edit and delete functionality should be displayed or not.`\r\n  );\r\n\r\n  const weatherlyDescription = (\r\n    `Weatherly is a basic HTML, CSS, and JavaScript application that employs the help of OpenWeather’s Current Weather API \r\n    to fetch weather data based on location and display it to the user. The project was designed to be responsive so it could \r\n    be viewed on multiple different devices such as phones, tablets, and desktops. The user must simply enter their desired \r\n    location into the search bar and then jQuery and JavaScript are used to make the fetch request to the API to return the user \r\n    their weather data and display it. The response includes some interesting information besides just temperature such as \r\n    wind speed, highs and lows, and a weather icon.`\r\n  );\r\n\r\n  const weatherlyDifficulties = (\r\n    `Some difficulties while making this project included making the responsive properties in order for weatherly to work on \r\n    smaller and older phones. The search bar and search button would be squished together and practically unclickable and made \r\n    for an ugly user experience. The containers for the response also needed to be adjusted to fit within the smaller screens \r\n    while not looking too cramped. Another problem was emptying out the container when the user wanted to make another search. \r\n    The container would become filled with all the requests the user made and become bloated.`\r\n  );\r\n\r\n  const weatherlySolutions = (\r\n    `Much of solving the responsive issue was trial and error. This meant testing out many different values for padding, \r\n    font size, margins, and display styles until I was satisfied with how it looked. Also, deciding what pixel size to use for \r\n    the media tags was decided by using iPhone screen resolutions as a reference. To fix my container problem, I decided to just \r\n    set the html inside to be empty while the next response was being fetched. This allowed the container to only display the \r\n    weather data for the most recent request.`\r\n  );\r\n\r\n  const blockbusterDescription = (\r\n    `This project is a mobile game that was designed using Corona SDK and the Lua language. \r\n    It's based off of the many popular \"ball and paddle\" games such as Brick Breaker. The game\r\n    was built using Corona SDK's physics engine to simulate the many different types of collisions \r\n    that can occur in the game such as ball-paddle, ball-block, ball-boundary, and, on the second level,\r\n    ball-ball. These collision events are what trigger a block being removed or damaged as well as checking \r\n    to make sure the player hasn't dropped the ball and lost the game. Each block has a different property based\r\n    on its color within the game. A red block means that it will break after the first hit. A blue block is a \r\n    block that can take two hits so after the first hit, it turns into a red block. The yellow block swaps the \r\n    color of all red and blue blocks. Gray blocks are indestructible and are solely for getting in the way of the\r\n    ball. Lastly, the green block spwans a second ball that must also be kept from falling to double the difficulty.\r\n    I also utilized Corona SDK's composer library in order to manage the different scenes and levels within the game.\r\n    It's used to create and destroy all the objects required for each level as well as the title and end screens, and\r\n    is what is used to move the player from scene to scene when they lose or win.`\r\n  );\r\n\r\n  const blockbusterDifficulties = (\r\n    `There were a lot of difficulties that I faced while creating this project, but the hardest problems were \r\n    getting all the objects from the previous scene deleted before moving onto the next and having each block's \r\n    color be randomized so that each time a level is loaded, the blocks are different. The objects from the \r\n    previous scene would still be on screen but their physics bodies would still remain so the ball would \r\n    seem to bounce and collide with invisible objects. Also, when a player had lost a level and restarted,\r\n    sometimes the block's previous color properties were being used rather than the new color \r\n    that it was supposed to be.`\r\n  );\r\n\r\n  const blockbusterSolutions = (\r\n    `For the problem where the previous level's objects were appearing in the next level, I needed to reorganize\r\n    my code and make sure I had good comments to keep myself from getting confused. I went back to where I was \r\n    creating my objects and made sure that there was no mistakes with how they were being assigned their variables\r\n    and positions. Then, I went to where the composer is supposed to bring in the objects for the current scene\r\n    which is the scene:show function. This function is called each time a scene is about to come on screen.\r\n    Previously, I had been using the scene:create function which is only called once at the creation of a scene so\r\n    if the level was restarted, the objects would not be created again. Lastly, I went to the scene:hide function\r\n    which is called when a scene is about to go off screen. I made sure all varaibles were reset and that I was\r\n    properly destroying all of the objects that I wanted gone. Afterwards, I realized this had also helped me solve\r\n    the problem I was having with assigning the color properties to each block, fixing both my problems in one solution.`\r\n  );\r\n\r\n  const spillItTechnologies = [\"Node.js\", \"MongoDB\", \"Express\", \"React\", \"npm\", \"HTML\", \"CSS\", \"JavaScript\"];\r\n  const weatherlyTechnologies = [\"jQuery\", \"HTML\", \"CSS\", \"JavaScript\"];\r\n  const blockbusterTechnologies = [\"Lua\", \"Corona SDK\"];\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <img src={chicagoImage} className=\"home_background_img\" alt=\"Chicago\"></img>\r\n\r\n      <div className=\"home_projects\">\r\n        <div className=\"home_projects_header\">\r\n          <h1>PROJECTS</h1>\r\n        </div>\r\n\r\n        <Project projectName={\"Spill It\"} projectImage={spillItImage} projectURL={\"https://github.com/GavinCernek/spill-it\"} \r\n                  projectDescription={spillItDescription} projectDifficulties={spillItDifficulties} \r\n                  projectSolutions={spillItSolutions} projectTechnologies={spillItTechnologies} \r\n        />\r\n\r\n        <Project projectName={\"Weatherly\"} projectImage={weatherlyImage} projectURL={\"https://github.com/GavinCernek/weatherly\"} \r\n                  projectDescription={weatherlyDescription} projectDifficulties={weatherlyDifficulties} \r\n                  projectSolutions={weatherlySolutions} projectTechnologies={weatherlyTechnologies}\r\n        />\r\n\r\n        <Project projectName={\"Block Buster\"} projectImage={blockbusterImage} projectURL={\"https://github.com/GavinCernek/blockbuster\"} \r\n                  projectDescription={blockbusterDescription} projectDifficulties={blockbusterDifficulties} \r\n                  projectSolutions={blockbusterSolutions} projectTechnologies={blockbusterTechnologies} \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","\r\nimport React from \"react\";\r\n\r\nimport \"./AboutItem.css\";\r\n\r\nconst AboutItem = props => {\r\n\r\n    return (\r\n        <div className=\"about-item\">\r\n            <div className=\"about-item-header\">\r\n                <h1>{props.header}</h1>\r\n            </div>\r\n\r\n            <div className=\"about-item-image\">\r\n                <img src={props.image} alt=\"About Item\"/>\r\n            </div>\r\n\r\n            <div className=\"about-item-text\">\r\n                <p>{props.text}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutItem;","\r\nimport React from 'react';\r\n\r\nimport AboutItem from \"../AboutItem/AboutItem\";\r\nimport './About.css';\r\nimport education_image from '../../images/northCentral-Image.jpg';\r\nimport athletic_image from '../../images/championshipTrophy-Image.jpg';\r\nimport hobby_image from '../../images/mustang-Image.jpg';\r\n\r\nconst About = () => {\r\n\r\n  const educationText = (\r\n    `I graduated from North Central College in Naperville, IL in May of 2020 with a B.S. in Computer Science. \r\n    While I attended North Central, I was on an Honors Scholarship and achieved multiple Dean's List awards.`\r\n  );\r\n\r\n  const athleticsText = (\r\n    `I was on the track and field team all four years and was a team captain my Junior and Senior seasons. \r\n    While on the team, we achieved two national championship titles during the 2017 and 2019 Indoor seasons. \r\n    I also obtained an All-American award for the 4x400m relay by placing 7th in the nation.`\r\n  );\r\n\r\n  const hobbiesText = (\r\n    `In my free time, I enjoy being outdoors with friends and doing activities like running, lifting, or playing basketball. \r\n    I also am constantly working on one of my many hobbies such as working on my car, building PCs, \r\n    and learning how to make my own games.`\r\n  );\r\n\r\n  return (\r\n    <div className=\"about\">\r\n      <div className=\"about_header\">\r\n        <h1>About Me</h1>\r\n      </div>\r\n\r\n      <AboutItem header={\"EDUCATION\"} image={education_image} text={educationText} />\r\n      <AboutItem header={\"ATHLETICS and LEADERSHIP\"} image={athletic_image} text={athleticsText} />\r\n      <AboutItem header={\"HOBBIES and INTERESTS\"} image={hobby_image} text={hobbiesText} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","\r\nimport React from 'react';\r\nimport './Contact.css';\r\n\r\nconst Contact = () => {\r\n  \r\n  return (\r\n    <div className=\"contact\">\r\n      <div className=\"contact-header\">\r\n        <h1>Contact Me</h1>\r\n      </div>\r\n\r\n      <div className=\"contact-info\">\r\n        <h1>Email</h1>\r\n        <p>gcernek@gmail.com</p>\r\n\r\n        <div className=\"github-link\">\r\n          <a href=\"https://github.com/GavinCernek\">View GitHub Profile</a>\r\n        </div>\r\n\r\n        <div className=\"linkedin-link\">\r\n          <a href=\"https://www.linkedin.com/in/gavin-cernek/\">View LinkedIn</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;","\nimport React from 'react';\n\nimport Toolbar from './components/Toolbar/Toolbar';\nimport Footer from './components/Footer/Footer';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Contact from './components/Contact/Contact';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nconst App = () => {\n\n  return (\n      <div className=\"App\">\n        <div className=\"content-wrap\">\n          <Router>\n            <Toolbar/>\n\n            <Switch>\n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/about\" component={About}/>\n              <Route path=\"/contact\" component={Contact}/>\n            </Switch>\n          </Router>\n        </div>\n        \n        <Footer/>\n      </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}